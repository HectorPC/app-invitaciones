{"remainingRequest":"/Users/hpalmerocases/Documents/Hector_personal/testing_projects/invita/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hpalmerocases/Documents/Hector_personal/testing_projects/invita/src/components/Hour.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hpalmerocases/Documents/Hector_personal/testing_projects/invita/src/components/Hour.vue","mtime":1542789958318},{"path":"/Users/hpalmerocases/Documents/Hector_personal/testing_projects/invita/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hpalmerocases/Documents/Hector_personal/testing_projects/invita/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hpalmerocases/Documents/Hector_personal/testing_projects/invita/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"Hour\",\n  props: {\n    label: { default: \"\", type: String },\n    type: { default: \"\", type: String },\n    idHour: { default: \"\", type: String },\n    name: { default: \"\", type: String },\n    isError: { default: false, type: Boolean }\n  },\n  data() {\n    return {\n      inputValue: \"\",\n      isFormError: false\n    };\n  },\n  methods: {\n    validation() {\n      var isValid = true;\n      if (this.inputValue == \"\") {\n        isValid = false;\n      }\n      isValid ? (this.isFormError = false) : (this.isFormError = true);\n    },\n    persistError() {\n      if (this.isFormError == true) {\n        this.isFormError = true;\n      }\n    }\n  },\n  watch: {\n    isError() {\n      this.isFormError = this.isError;\n      this.validation();\n      return this.isFormError;\n    }\n  }\n};\n",{"version":3,"sources":["Hour.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Hour.vue","sourceRoot":"src/components","sourcesContent":["<template>\n        <div id=\"inputText\" class=\"group\" :type=\"type\">\n            <input type=\"time\" :id=\"idHour\" :name=\"name\" @blur=\"validation\" @focus=\"persistError\" v-model=\"inputValue\" :class=\"{'error-mark': isFormError}\">\n            <span class=\"bar\">\n                <span v-if=\"isFormError\" class=\"error-text\">{{ label }} no insertada</span>\n            </span>\n            <label :label=\"label\">{{ label }}</label>\n        </div>\n    </template>\n    \n    <script>\nexport default {\n  name: \"Hour\",\n  props: {\n    label: { default: \"\", type: String },\n    type: { default: \"\", type: String },\n    idHour: { default: \"\", type: String },\n    name: { default: \"\", type: String },\n    isError: { default: false, type: Boolean }\n  },\n  data() {\n    return {\n      inputValue: \"\",\n      isFormError: false\n    };\n  },\n  methods: {\n    validation() {\n      var isValid = true;\n      if (this.inputValue == \"\") {\n        isValid = false;\n      }\n      isValid ? (this.isFormError = false) : (this.isFormError = true);\n    },\n    persistError() {\n      if (this.isFormError == true) {\n        this.isFormError = true;\n      }\n    }\n  },\n  watch: {\n    isError() {\n      this.isFormError = this.isError;\n      this.validation();\n      return this.isFormError;\n    }\n  }\n};\n</script>\n    \n    <style lang=\"scss\" scoped>\n* {\n  box-sizing: border-box;\n}\n\n.group {\n  position: relative;\n  margin-bottom: 45px;\n  z-index: 1;\n}\n\ninput {\n  opacity: 0.4;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-bottom: 1px solid #757575;\n  &.error-mark {\n    border-bottom: 2px solid #dd2c00;\n  }\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label,\n  &:valid ~ label {\n    top: -20px;\n    font-size: 14px;\n    color: #202020;\n  }\n  &:focus ~ .bar:before,\n  &:focus ~ .bar:after {\n    width: 50%;\n  }\n}\n\nlabel {\n  color: #999;\n  font-size: 18px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 0.2s ease all;\n  -moz-transition: 0.2s ease all;\n  -webkit-transition: 0.2s ease all;\n}\n\n.bar {\n  position: relative;\n  display: block;\n  width: 100%;\n  &:before,\n  &:after {\n    content: \"\";\n    height: 2px;\n    width: 0;\n    bottom: 1px;\n    position: absolute;\n    background: #202020;\n    transition: 0.2s ease all;\n    -moz-transition: 0.2s ease all;\n    -webkit-transition: 0.2s ease all;\n  }\n  &:before {\n    left: 50%;\n  }\n  &:after {\n    right: 50%;\n  }\n}\n\n.error-text {\n  color: #dd2c00;\n  font-size: 0.65em;\n  font-weight: 500;\n  float: left;\n}\n\n// input[type=\"date\"]::-webkit-calendar-picker-indicator {\n//      color: rgba(0, 0, 0, 0);\n//     opacity: 1;\n//     display: block;\n//     background: url(../assets/img/calendar.jpg) no-repeat;\n//     background-size: 20px 20px;\n//     width: 20px;\n//     height: 20px;\n\n//     border-width: thin;\n// }\n\n// input[type=\"date\"]::-webkit-inner-spin-button {\n//   -webkit-appearance: none;\n//   display: none;\n// }\n</style>"]}]}